var Tests;
(function (Tests) {
    var TestClass = (function () {
        function TestClass(one, two) {
            this.one = one;
            this.two = two;
        }
        return TestClass;
    }());
    Tests.TestClass = TestClass;
})(Tests || (Tests = {}));
describe('Angular module', function () {
    var $filter;
    beforeEach(angular.mock.module('test'));
    beforeEach(inject(function (_$filter_) {
        $filter = _$filter_;
    }));
    describe('Activator', function () {
        it('creates an instance of a class', function () {
            chai.expect(Object.create).to.be.a('function');
            var instance = Angular.Activator.create(Tests.TestClass, ['one', 'two']);
            chai.assert.isDefined(instance);
            chai.assert.isObject(instance);
            chai.assert.equal(instance.one, 'one');
            chai.assert.equal(instance.two, 'two');
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLnRlc3RzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRlc3RzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQU8sS0FBSyxDQUlYO0FBSkQsV0FBTyxLQUFLLEVBQUMsQ0FBQztJQUNWO1FBQ0ksbUJBQW1CLEdBQUcsRUFBUyxHQUFHO1lBQWYsUUFBRyxHQUFILEdBQUcsQ0FBQTtZQUFTLFFBQUcsR0FBSCxHQUFHLENBQUE7UUFBSSxDQUFDO1FBQzNDLGdCQUFDO0lBQUQsQ0FBQyxBQUZELElBRUM7SUFGWSxlQUFTLFlBRXJCLENBQUE7QUFDTCxDQUFDLEVBSk0sS0FBSyxLQUFMLEtBQUssUUFJWDtBQUVELFFBQVEsQ0FBQyxnQkFBZ0IsRUFBRTtJQUV2QixJQUFJLE9BQU8sQ0FBQztJQUNaLFVBQVUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBQ3hDLFVBQVUsQ0FBQyxNQUFNLENBQUMsVUFBUyxTQUFTO1FBQ2hDLE9BQU8sR0FBRyxTQUFTLENBQUM7SUFDeEIsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVKLFFBQVEsQ0FBQyxXQUFXLEVBQUU7UUFFbEIsRUFBRSxDQUFDLGdDQUFnQyxFQUFFO1lBQ2pDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBRS9DLElBQUksUUFBUSxHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQztZQUN6RSxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUNoQyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUMvQixJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBQ3ZDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDM0MsQ0FBQyxDQUFDLENBQUM7SUFFUCxDQUFDLENBQUMsQ0FBQztBQUVQLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlIFRlc3RzIHtcclxuICAgIGV4cG9ydCBjbGFzcyBUZXN0Q2xhc3Mge1xyXG4gICAgICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBvbmUsIHB1YmxpYyB0d28pIHsgfVxyXG4gICAgfVxyXG59XHJcblxyXG5kZXNjcmliZSgnQW5ndWxhciBtb2R1bGUnLCBmdW5jdGlvbigpIHtcclxuXHJcbiAgICB2YXIgJGZpbHRlcjtcclxuICAgIGJlZm9yZUVhY2goYW5ndWxhci5tb2NrLm1vZHVsZSgndGVzdCcpKTtcclxuICAgIGJlZm9yZUVhY2goaW5qZWN0KGZ1bmN0aW9uKF8kZmlsdGVyXykge1xyXG4gICAgICAgICRmaWx0ZXIgPSBfJGZpbHRlcl87XHJcbiAgICB9KSk7XHJcblxyXG4gICAgZGVzY3JpYmUoJ0FjdGl2YXRvcicsIGZ1bmN0aW9uKCkge1xyXG5cclxuICAgICAgICBpdCgnY3JlYXRlcyBhbiBpbnN0YW5jZSBvZiBhIGNsYXNzJywgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIGNoYWkuZXhwZWN0KE9iamVjdC5jcmVhdGUpLnRvLmJlLmEoJ2Z1bmN0aW9uJyk7XHJcblxyXG4gICAgICAgICAgICB2YXIgaW5zdGFuY2UgPSBBbmd1bGFyLkFjdGl2YXRvci5jcmVhdGUoVGVzdHMuVGVzdENsYXNzLCBbJ29uZScsICd0d28nXSk7XHJcbiAgICAgICAgICAgIGNoYWkuYXNzZXJ0LmlzRGVmaW5lZChpbnN0YW5jZSk7XHJcbiAgICAgICAgICAgIGNoYWkuYXNzZXJ0LmlzT2JqZWN0KGluc3RhbmNlKTtcclxuICAgICAgICAgICAgY2hhaS5hc3NlcnQuZXF1YWwoaW5zdGFuY2Uub25lLCAnb25lJyk7XHJcbiAgICAgICAgICAgIGNoYWkuYXNzZXJ0LmVxdWFsKGluc3RhbmNlLnR3bywgJ3R3bycpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgIH0pO1xyXG5cclxufSk7Il19